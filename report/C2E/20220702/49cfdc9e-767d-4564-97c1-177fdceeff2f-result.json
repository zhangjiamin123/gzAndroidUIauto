{"name": "C2E校准", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_gzAndroidAuto.TestDeviceList object at 0x000001F417A68880>\ndev_name = 'IndoorCam'\n\n    @allure.title('C2E校准')\n    @allure.story('C2E重复校准是否会出现问题')\n    def test_C2E_Calibrate(self, dev_name='IndoorCam'):\n        # 在首页的话执行step1-3\n        if gz_public.isElementPresent(driver=master, by=\"id\",\n                                      value=\"com.glazero.android:id/img_menu\") is True:\n            with allure.step('step1: 在设备列表中滑动找到C2E设备（默认名字是IndoorCam，可在参数中修改名字）'):\n                master.find_element_by_android_uiautomator(\n                    'new UiScrollable(new UiSelector().scrollable(true)).scrollIntoView(new UiSelector().text('\n                    '\"%s\")).scrollToEnd(10,5)' % dev_name)\n                master.implicitly_wait(10)\n    \n            with allure.step('step2: 点击设备名称，例如，IndoorCam'):\n                master.find_element_by_xpath('//android.widget.TextView[@text=\"%s\"]' % dev_name).click()\n                master.implicitly_wait(10)\n                time.sleep(3)  # 等待开流页面加载完成\n    \n            with allure.step('step3：点击Holder'):\n                master.find_element_by_xpath('//android.widget.TextView[@text=\"Holder\"]').click()\n                master.implicitly_wait(10)\n                time.sleep(2)  # 等待Holder菜单加载完成\n    \n        # 如果停留在校准页面，那么就直接点击校准按钮，执行step4-5\n        if gz_public.isElementPresent(driver=master, by=\"id\",\n                                      value=\"com.glazero.android:id/btn_calibration\") is True:\n            with allure.step('step4：点击Calibrate'):\n                master.find_element_by_xpath('//android.widget.TextView[@text=\"Calibrate\"]').click()\n                master.implicitly_wait(10)\n                time.sleep(1)\n    \n                # 点击校准后，有可能会弹出提示弹窗（turn on the tracking, and the camera will follow the moving object），发现后点击“GOT\n                # IT”，关闭弹窗\n                if gz_public.isElementPresent(driver=master, by=\"id\",\n                                              value=\"com.glazero.android:id/positive_btn\") is True:\n                    master.find_element_by_id(\"com.glazero.android:id/positive_btn\").click()\n                    master.implicitly_wait(10)\n    \n                # 检验校准过程中的状态\n>               WebDriverWait(master, timeout=30, poll_frequency=1).until(lambda x: x.find_element_by_id('com.glazero'\n                                                                                                         '.android:id'\n                                                                                                         '/pb_calibtating'))\n\ntest_gzAndroidAuto.py:926: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"660534cd-5dea-49ce-b872-58f1612cf3d8\")>\nmethod = <function TestDeviceList.test_C2E_Calibrate.<locals>.<lambda> at 0x000001F417A648B0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "step4：点击Calibrate", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\Hello\\PycharmProjects\\gz_ui_auto\\test_gzAndroidAuto.py\", line 926, in test_C2E_Calibrate\n    WebDriverWait(master, timeout=30, poll_frequency=1).until(lambda x: x.find_element_by_id('com.glazero'\n  File \"C:\\Users\\Hello\\PycharmProjects\\gz_ui_auto\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1656686463757, "stop": 1656686508327}], "attachments": [{"name": "log", "source": "bfbc911e-62a7-44be-ade3-022d4b906d29-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "__pytest_repeat_step_number", "value": "85"}], "start": 1656686453600, "stop": 1656686508330, "uuid": "a39b2ba1-95cd-4f3d-8eae-f50fbe279236", "historyId": "da0a5632dbd00fdbb617275999bd9bcb", "testCaseId": "f4ec50f664bf84528fb46d407b51a9e1", "fullName": "test_gzAndroidAuto.TestDeviceList#test_C2E_Calibrate", "labels": [{"name": "feature", "value": "设备列表/首页 模块"}, {"name": "story", "value": "C2E重复校准是否会出现问题"}, {"name": "suite", "value": "test_gzAndroidAuto"}, {"name": "subSuite", "value": "TestDeviceList"}, {"name": "host", "value": "LAPTOP-V9T4AUSR"}, {"name": "thread", "value": "42524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_gzAndroidAuto"}]}